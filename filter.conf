filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
#  
 if [type] == "apache_wp" {
      grok {
      match => { "[log][file][path]" => "\\(?<log_file>\w+?)?.log$" }      
    }
     grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:log_time}\s+(?<level>(TRACE)|(INFO)|(WARN)|(DEBUG)|(ERROR))\s+(?<module_j>\w+(.*?)\s+)-\s+%{GREEDYDATA:message}" }
      overwrite => [ "message" ]
    }
      date {
      match => [ "log_time", "yyyy-MM-dd HH:mm:ss.SSSS" ]
      remove_field => [ "log_time" ]
     }
   }
#  
 if [type] == "mysql" {
      grok {
      match => { "[log][file][path]" => "\\(?<log_file>\w+?)?.log$" }      
    }
     grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:log_time}\s+(?<level>(TRACE)|(INFO)|(WARN)|(DEBUG)|(ERROR))\s+(?<module_j>\w+(.*?)\s+)-\s+%{GREEDYDATA:message}" }
      overwrite => [ "message" ]
    }
      date {
      match => [ "log_time", "yyyy-MM-dd HH:mm:ss.SSSS" ]
      remove_field => [ "log_time" ]
     }
   }
#  
}
